[{"path":"https://leopoldguyot.github.io/scpGUI/articles/scpGUI.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"scpGUI","text":"","code":"# Check if remotes is installed. Otherwise install it. if (!require(\"remotes\", quietly = TRUE))     install.packages(\"remotes\") # Install the package remotes::install_github(\"leopoldguyot/scpGUI\") #>  #> * checking for file ‘/tmp/Rtmpqqs1tt/remotes2193637dbf8e/leopoldguyot-scpGUI-b104f44/DESCRIPTION’ ... OK #> * preparing ‘scpGUI’: #> * checking DESCRIPTION meta-information ... OK #> * checking for LF line-endings in source and make files and shell scripts #> * checking for empty or unneeded directories #> * building ‘scpGUI_0.0.0.9000.tar.gz’ # Load the package library(scpGUI)"},{"path":"https://leopoldguyot.github.io/scpGUI/articles/scpGUI.html","id":"application-launch","dir":"Articles","previous_headings":"","what":"Application launch","title":"scpGUI","text":"","code":"scpGUI()"},{"path":"https://leopoldguyot.github.io/scpGUI/articles/scpGUI.html","id":"create-a-qfeatures-object","dir":"Articles","previous_headings":"","what":"Create a QFeatures object","title":"scpGUI","text":"application launch, window look like :","code":""},{"path":"https://leopoldguyot.github.io/scpGUI/articles/scpGUI.html","id":"table-import","dir":"Articles","previous_headings":"Create a QFeatures object","what":"Table import","title":"scpGUI","text":"first step create QFeatures object provide two tables : Input Table: input table generated identification quantification MS spectra pre-processing software MaxQuant, ProteomeDiscoverer MSFragger . Sample Table: sample table contains experimental design generated researcher. rows sample table correspond sample experiment columns correspond available annotations sample. information tables can found documentation function readSCP() package scp. provide table, press Browse… button choose appropriate .csv .tsv file computer. file sectioned, path visible next Browse… button. press Import settings button, new window appear. Choose appropriate options import file (see read.table() documentation information): separator character (default = “,”) decimal character (default = “.”) comment character (default = “#”) number line skip reading file (default = 0) strings factor (default = FALSE) options correctly choose file, click Import button close window. table now visible interface, make sure well formatted continuing. process import tables identical.","code":""},{"path":"https://leopoldguyot.github.io/scpGUI/articles/scpGUI.html","id":"qfeatures-conversion","dir":"Articles","previous_headings":"Create a QFeatures object","what":"QFeatures conversion","title":"scpGUI","text":"QFeatures converter tool available right side application. first step perform QFeatures conversion supply columns used create links two table: batch column: column Input table Sample table contain batch names. channel column: column Sample table contains column names quantitative data Input table Sample table correctly imported, column names available drop-list. Select drop-list appropriate column. option remove batch columns contains missing values also available use checkbox. everything correctly setup, press Convert QFeatures object button, loading menu appear. error occurred conversion, error message pop bellow Convert button, refer readSCP() function find origin error. everything went well, notification appears “conversion succeed” message.","code":""},{"path":"https://leopoldguyot.github.io/scpGUI/articles/scpGUI.html","id":"qfeatures-object-export","dir":"Articles","previous_headings":"Create a QFeatures object","what":"QFeatures object export","title":"scpGUI","text":"QFeatures Preview panel now present QFeatures converter tool. Check preview conversion went fine. clicking row (corresponding assay), sectioned assay appears , check everything looks convenience. everything looks fine, click Download button, download .rds file containing QFeatures object computer. Choose destination folder, name file click save. QFeatures object now available computer, can used combination scp package continue data processing.","code":""},{"path":"https://leopoldguyot.github.io/scpGUI/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Léopold Guyot. Author, maintainer.","code":""},{"path":"https://leopoldguyot.github.io/scpGUI/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Guyot L (2023). scpGUI: simple GUI use main features scp package.. https://github.com/leopoldguyot/scpGUI, https://leopoldguyot.github.io/scpGUI/.","code":"@Manual{,   title = {scpGUI: A simple GUI to use the main features of the scp package.},   author = {Léopold Guyot},   year = {2023},   note = {https://github.com/leopoldguyot/scpGUI, https://leopoldguyot.github.io/scpGUI/}, }"},{"path":"https://leopoldguyot.github.io/scpGUI/index.html","id":"scpgui","dir":"","previous_headings":"","what":"A simple GUI to use the main features of the scp package.","title":"A simple GUI to use the main features of the scp package.","text":"scpGUI graphical interface scp package. Currently app can used convert two separate tables (Input Sample) QFeatures object. process performed readSCP function scp package.","code":""},{"path":"https://leopoldguyot.github.io/scpGUI/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A simple GUI to use the main features of the scp package.","text":"Get package:","code":"# Check if remotes is installed. Otherwise install it. if (!require(\"remotes\", quietly = TRUE))     install.packages(\"remotes\") # Install the package remotes::install_github(\"leopoldguyot/scpGUI\") # Load the package library(scpGUI)"},{"path":"https://leopoldguyot.github.io/scpGUI/reference/scpGUI.html","id":null,"dir":"Reference","previous_headings":"","what":"scpGUI — scpGUI","title":"scpGUI — scpGUI","text":"scpGui simple graphical interface handle SCP data. first page app allow convert two tables (Input Sample) QFeatures object. process performed readSCP function scp package.","code":""},{"path":"https://leopoldguyot.github.io/scpGUI/reference/scpGUI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"scpGUI — scpGUI","text":"","code":"scpGUI()"},{"path":"https://leopoldguyot.github.io/scpGUI/reference/scpGUI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"scpGUI — scpGUI","text":"Launch scpGui shiny app.","code":""},{"path":"https://leopoldguyot.github.io/scpGUI/reference/scpGUI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"scpGUI — scpGUI","text":"","code":"scpGui() #start a shiny app #> Error in scpGui(): could not find function \"scpGui\""}]
